<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="modx.prosilver.en.xsl"?>
<!--NOTICE: Please open this file in your web browser. If presented with a security warning, you may safely tell it to allow the blocked content.-->
<!--For security purposes, please check: http://www.phpbb.com/mods/ for the latest version of this MOD.\nAlthough MODs are checked before being allowed in the MODs Database there is no guarantee that there are no security problems within the MOD.\nNo support will be given for MODs not found within the MODs Database which can be found at http://www.phpbb.com/mods/-->
<mod xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://www.phpbb.com/mods/xml/modx-1.2.6.xsd">
	<header>
		<meta name="generator" content="MODX file generated with PP MODX Creator by tumba25 (online version)"/>
		<license><![CDATA[http://opensource.org/licenses/gpl-license.php GNU General Public License v2]]></license>
		<title lang="en"><![CDATA[Full Style Refresh]]></title>
		<description lang="en"><![CDATA[Small modification which allows to refresh templates, themes and imagesets of style with one click.]]></description>
		<author-group>
			<author>
				<realname><![CDATA[Mateusz MaÅ‚ek]]></realname>
				<username><![CDATA[Tajgeer]]></username>
				<homepage><![CDATA[http://dev.tajgeer.eu]]></homepage>
				<email><![CDATA[tajgeer@o2.pl]]></email>
			</author>
		</author-group>
		<mod-version>1.1.1</mod-version>
		<installation>
			<level>easy</level>
			<time>120</time>
			<target-version>3.0.11</target-version>
		</installation>
		<history>
			<entry>
				<date>2012-02-12</date>
				<rev-version>1.0.0</rev-version>
				<changelog lang="en">
					<change><![CDATA[Initial release]]></change>
				</changelog>
			</entry>
			<entry>
				<date>2012-02-12</date>
				<rev-version>1.0.1</rev-version>
				<changelog lang="en">
					<change><![CDATA[Fixed bug (option wasn't shown only on "Styles" mode as intended)]]></change>
				</changelog>
			</entry>
			<entry>
				<date>2012-02-13</date>
				<rev-version>1.0.2</rev-version>
				<changelog lang="en">
					<change><![CDATA[Added option to completly refresh all active styles]]></change>
				</changelog>
			</entry>
			<entry>
				<date>2012-02-14</date>
				<rev-version>1.0.3</rev-version>
				<changelog lang="en">
					<change><![CDATA[Added option to completly refresh all active styles by clicking on link (overall_footer.html)]]></change>
					<change><![CDATA[Added new log events]]></change>
				</changelog>
			</entry>
			<entry>
				<date>2012-02-14</date>
				<rev-version>1.1.0</rev-version>
				<changelog lang="en">
					<change><![CDATA[Submitted to MOD Database]]></change>
				</changelog>
			</entry>
			<entry>
				<date>2012-02-15</date>
				<rev-version>1.1.1</rev-version>
				<changelog lang="en">
					<change><![CDATA[Submitted to MOD Database]]></change>
					<change><![CDATA[Changed full refresh URL generation to be more accurate while using 3rd party modifications]]></change>
				</changelog>
			</entry>
		</history>
	</header>
	<action-group>
		<copy>
			<file from="root/*.*" to="*.*"/>
		</copy>
		<open src="includes/functions.php">
			<edit>
				<find><![CDATA[		'U_ACP' => ($auth->acl_get('a_') && !empty($user->data['is_registered'])) ? append_sid("{$phpbb_root_path}adm/index.$phpEx", false, true, $user->session_id) : '')]]></find>
				<action type="replace-with"><![CDATA[		'U_ACP' => ($auth->acl_get('a_') && !empty($user->data['is_registered'])) ? append_sid("{$phpbb_root_path}adm/index.$phpEx", false, true, $user->session_id) : '',
		'U_FULL_REFRESH' => ($auth->acl_get('a_') && !empty($user->data['is_registered'])) ? append_sid("{$phpbb_root_path}adm/index.$phpEx", array('i' => 'styles', 'mode' => 'full_refresh', 'redirect' => urlencode('../' . $user->page['page'])), false, $user->session_id) : '')]]></action>
			</edit>
		</open>
		<open src="includes/acp/acp_styles.php">
			<edit>
				<find><![CDATA[					case 'activate':
					case 'deactivate':

						if ($style_id == $config['default_style'])
						{
							trigger_error($user->lang['DEACTIVATE_DEFAULT'] . adm_back_link($this->u_action), E_USER_WARNING);
						}

						if (($action == 'deactivate' && confirm_box(true)) || $action == 'activate')
						{
							$sql = 'UPDATE ' . STYLES_TABLE . '
								SET style_active = ' . (($action == 'activate') ? 1 : 0) . '
								WHERE style_id = ' . $style_id;
							$db->sql_query($sql);

							// Set style to default for any member using deactivated style
							if ($action == 'deactivate')
							{
								$sql = 'UPDATE ' . USERS_TABLE . '
									SET user_style = ' . $config['default_style'] . "
									WHERE user_style = $style_id";
								$db->sql_query($sql);

								$sql = 'UPDATE ' . FORUMS_TABLE . '
									SET forum_style = 0
									WHERE forum_style = ' . $style_id;
								$db->sql_query($sql);
							}
						}
						else if ($action == 'deactivate')
						{
							$s_hidden_fields = array(
								'i'			=> $id,
								'mode'		=> $mode,
								'action'	=> $action,
								'style_id'	=> $style_id,
							);
							confirm_box(false, $user->lang['CONFIRM_OPERATION'], build_hidden_fields($s_hidden_fields));
						}
					break;]]></find>
				<action type="after-add"><![CDATA[					// Full Style Refresh by Tajgeer
					case 'full_refresh':
					
						if(confirm_box(true))
						{
							$sql = 'SELECT *
									FROM ' . STYLES_TEMPLATE_TABLE . "
									WHERE template_id = $style_id";
							$result = $db->sql_query($sql);
							$template_row = $db->sql_fetchrow($result);
							$db->sql_freeresult($result);

							if($template_row)
							{
								$template_refreshed = '';

								// Only refresh database if the template is stored in the database
								if ($template_row['template_storedb'] && file_exists("{$phpbb_root_path}styles/{$template_row['template_path']}/template/"))
								{
									$filelist = array('' => array());

									$sql = 'SELECT template_filename, template_mtime
										FROM ' . STYLES_TEMPLATE_DATA_TABLE . "
										WHERE template_id = $style_id";
									$result = $db->sql_query($sql);

									while ($row = $db->sql_fetchrow($result))
									{
											// get folder info from the filename
											if (($slash_pos = strrpos($row['template_filename'], '/')) === false)
											{
												$filelist[''][] = $row['template_filename'];
											}
											else
											{
												$filelist[substr($row['template_filename'], 0, $slash_pos + 1)][] = substr($row['template_filename'], $slash_pos + 1, strlen($row['template_filename']) - $slash_pos - 1);
											}
									}
									$db->sql_freeresult($result);

									$this->store_templates('update', $style_id, $template_row['template_path'], $filelist);
									unset($filelist);

								}

								$this->clear_template_cache($template_row, false, false);
							}

							$sql = 'SELECT *
									FROM ' . STYLES_THEME_TABLE . "
									WHERE theme_id = $style_id";
							$result = $db->sql_query($sql);
							$theme_row = $db->sql_fetchrow($result);
							$db->sql_freeresult($result);

							if ($theme_row)
							{
								if ($theme_row['theme_storedb'] && file_exists("{$phpbb_root_path}styles/{$theme_row['theme_path']}/theme/stylesheet.css"))
								{
									// Save CSS contents
									$sql_ary = array(
										'theme_mtime'	=> (int) filemtime("{$phpbb_root_path}styles/{$theme_row['theme_path']}/theme/stylesheet.css"),
										'theme_data'	=> $this->db_theme_data($theme_row)
									);

									$sql = 'UPDATE ' . STYLES_THEME_TABLE . ' SET ' . $db->sql_build_array('UPDATE', $sql_ary) . "
										WHERE theme_id = $style_id";
									$db->sql_query($sql);

									$cache->destroy('sql', STYLES_THEME_TABLE);

								}
							}

							$sql = 'SELECT *
								FROM ' . STYLES_IMAGESET_TABLE . "
								WHERE imageset_id = $style_id";
							$result = $db->sql_query($sql);
							$imageset_row = $db->sql_fetchrow($result);
							$db->sql_freeresult($result);

							if ($imageset_row)
							{
								$sql_ary = array();

								$imageset_definitions = array();
								foreach ($this->imageset_keys as $topic => $key_array)
								{
									$imageset_definitions = array_merge($imageset_definitions, $key_array);
								}

								$cfg_data_imageset = parse_cfg_file("{$phpbb_root_path}styles/{$imageset_row['imageset_path']}/imageset/imageset.cfg");

								$db->sql_transaction('begin');

								$sql = 'DELETE FROM ' . STYLES_IMAGESET_DATA_TABLE . '
									WHERE imageset_id = ' . $style_id;
								$result = $db->sql_query($sql);

								foreach ($cfg_data_imageset as $image_name => $value)
								{
									if (strpos($value, '*') !== false)
									{
										if (substr($value, -1, 1) === '*')
										{
											list($image_filename, $image_height) = explode('*', $value);
											$image_width = 0;
										}
										else
										{
											list($image_filename, $image_height, $image_width) = explode('*', $value);
										}
									}
									else
									{
										$image_filename = $value;
										$image_height = $image_width = 0;
									}

									if (strpos($image_name, 'img_') === 0 && $image_filename)
									{
										$image_name = substr($image_name, 4);
										if (in_array($image_name, $imageset_definitions))
										{
											$sql_ary[] = array(
												'image_name'		=> (string) $image_name,
												'image_filename'	=> (string) $image_filename,
												'image_height'		=> (int) $image_height,
												'image_width'		=> (int) $image_width,
												'imageset_id'		=> (int) $style_id,
												'image_lang'		=> '',
											);
										}
									}
								}

								$sql = 'SELECT lang_dir
									FROM ' . LANG_TABLE;
								$result = $db->sql_query($sql);

								while ($row = $db->sql_fetchrow($result))
								{
									if (@file_exists("{$phpbb_root_path}styles/{$imageset_row['imageset_path']}/imageset/{$row['lang_dir']}/imageset.cfg"))
									{
										$cfg_data_imageset_data = parse_cfg_file("{$phpbb_root_path}styles/{$imageset_row['imageset_path']}/imageset/{$row['lang_dir']}/imageset.cfg");
										foreach ($cfg_data_imageset_data as $image_name => $value)
										{
											if (strpos($value, '*') !== false)
											{
												if (substr($value, -1, 1) === '*')
												{
													list($image_filename, $image_height) = explode('*', $value);
													$image_width = 0;
												}
												else
												{
													list($image_filename, $image_height, $image_width) = explode('*', $value);
												}
											}
											else
											{
												$image_filename = $value;
												$image_height = $image_width = 0;
											}

											if (strpos($image_name, 'img_') === 0 && $image_filename)
											{
												$image_name = substr($image_name, 4);
												if (in_array($image_name, $imageset_definitions))
												{
													$sql_ary[] = array(
														'image_name'		=> (string) $image_name,
														'image_filename'	=> (string) $image_filename,
														'image_height'		=> (int) $image_height,
														'image_width'		=> (int) $image_width,
														'imageset_id'		=> (int) $style_id,
														'image_lang'		=> (string) $row['lang_dir'],
													);
												}
											}
										}
									}
								}
								$db->sql_freeresult($result);

								$db->sql_multi_insert(STYLES_IMAGESET_DATA_TABLE, $sql_ary);

								$db->sql_transaction('commit');

								$cache->destroy('sql', STYLES_IMAGESET_DATA_TABLE);
								$cache->destroy('imageset_site_logo_md5');
							}
							
							add_log('admin', 'LOG_STYLE_REFRESH', $template_row['template_name']);
							trigger_error($user->lang['FULL_REFRESH_COMPLETED'] . adm_back_link($this->u_action));
						}
						else
						{
							$s_hidden_fields = array(
								'i'			=> $id,
								'mode'		=> $mode,
								'action'	=> $action,
								'style_id'	=> $style_id,
							);
							confirm_box(false, $user->lang['CONFIRM_OPERATION'], build_hidden_fields($s_hidden_fields));
						}
						
					break;
					// end: Full Style Refresh by Tajgeer]]></action>
			</edit>
			<edit>
				<find><![CDATA[				$this->frontend('imageset', array('edit', 'details'), array('refresh', 'export', 'delete'));
			break;]]></find>
				<action type="after-add"><![CDATA[			case 'full_refresh':
			
				$redirect = request_var('redirect', "index.$phpEx?i=styles");
				
				if(confirm_box(true))
				{
					$this->perform_full_refresh();
					trigger_error($user->lang['FULL_REFRESH_COMPLETED'] . adm_back_link(append_sid(str_replace('&amp;', '&', $redirect))));
				}
				else
				{
					$s_hidden_fields = array(
						'i'			=> $id,
						'mode'		=> $mode,
						'redirect'  => $redirect,
					);
					
					confirm_box(false, $user->lang['CONFIRM_OPERATION'], build_hidden_fields($s_hidden_fields));
				}
			break;]]></action>
			</edit>
			<edit>
				<find><![CDATA[	/**
	* Build Frontend with supplied options
	*/
	function frontend($mode, $options, $actions)
	{]]></find>
				<action type="before-add"><![CDATA[	/**
	* Perform full refresh on all templates
	* Full Style Refresh by Tajgeer
	*/
	function perform_full_refresh()
	{
		global $user, $template, $cache, $db, $config, $phpbb_root_path, $phpEx;
		
		$sql = 'SELECT style_id
				FROM ' . STYLES_TABLE .'
				WHERE style_active = 1';
		$result = $db->sql_query($sql);
		while($styles_row = $db->sql_fetchrow($result))
		{
			$styles[] = $styles_row['style_id'];
		}
		$styles = array_unique($styles);
		
		foreach($styles as $iter => $style_id)
		{
			$sql = 'SELECT *
					FROM ' . STYLES_TEMPLATE_TABLE . "
					WHERE template_id = $style_id";
			$result = $db->sql_query($sql);
			$template_row = $db->sql_fetchrow($result);
			$db->sql_freeresult($result);

			if($template_row)
			{
				$template_refreshed = '';

				// Only refresh database if the template is stored in the database
				if ($template_row['template_storedb'] && file_exists("{$phpbb_root_path}styles/{$template_row['template_path']}/template/"))
				{
					$filelist = array('' => array());

					$sql = 'SELECT template_filename, template_mtime
						FROM ' . STYLES_TEMPLATE_DATA_TABLE . "
						WHERE template_id = $style_id";
					$result = $db->sql_query($sql);

					while ($row = $db->sql_fetchrow($result))
					{
							// get folder info from the filename
							if (($slash_pos = strrpos($row['template_filename'], '/')) === false)
							{
								$filelist[''][] = $row['template_filename'];
							}
							else
							{
								$filelist[substr($row['template_filename'], 0, $slash_pos + 1)][] = substr($row['template_filename'], $slash_pos + 1, strlen($row['template_filename']) - $slash_pos - 1);
							}
					}
					$db->sql_freeresult($result);

					$this->store_templates('update', $style_id, $template_row['template_path'], $filelist);
					unset($filelist);
				}

				$this->clear_template_cache($template_row, false, false);
			}

			$sql = 'SELECT *
					FROM ' . STYLES_THEME_TABLE . "
					WHERE theme_id = $style_id";
			$result = $db->sql_query($sql);
			$theme_row = $db->sql_fetchrow($result);
			$db->sql_freeresult($result);

			if ($theme_row)
			{
				if ($theme_row['theme_storedb'] && file_exists("{$phpbb_root_path}styles/{$theme_row['theme_path']}/theme/stylesheet.css"))
				{
					// Save CSS contents
					$sql_ary = array(
						'theme_mtime'	=> (int) filemtime("{$phpbb_root_path}styles/{$theme_row['theme_path']}/theme/stylesheet.css"),
						'theme_data'	=> $this->db_theme_data($theme_row)
					);

					$sql = 'UPDATE ' . STYLES_THEME_TABLE . ' SET ' . $db->sql_build_array('UPDATE', $sql_ary) . "
						WHERE theme_id = $style_id";
					$db->sql_query($sql);

					$cache->destroy('sql', STYLES_THEME_TABLE);
				}
			}

			$sql = 'SELECT *
				FROM ' . STYLES_IMAGESET_TABLE . "
				WHERE imageset_id = $style_id";
			$result = $db->sql_query($sql);
			$imageset_row = $db->sql_fetchrow($result);
			$db->sql_freeresult($result);

			if ($imageset_row)
			{
				$sql_ary = array();

				$imageset_definitions = array();
				foreach ($this->imageset_keys as $topic => $key_array)
				{
					$imageset_definitions = array_merge($imageset_definitions, $key_array);
				}

				$cfg_data_imageset = parse_cfg_file("{$phpbb_root_path}styles/{$imageset_row['imageset_path']}/imageset/imageset.cfg");

				$db->sql_transaction('begin');

				$sql = 'DELETE FROM ' . STYLES_IMAGESET_DATA_TABLE . '
					WHERE imageset_id = ' . $style_id;
				$result = $db->sql_query($sql);

				foreach ($cfg_data_imageset as $image_name => $value)
				{
					if (strpos($value, '*') !== false)
					{
						if (substr($value, -1, 1) === '*')
						{
							list($image_filename, $image_height) = explode('*', $value);
							$image_width = 0;
						}
						else
						{
							list($image_filename, $image_height, $image_width) = explode('*', $value);
						}
					}
					else
					{
						$image_filename = $value;
						$image_height = $image_width = 0;
					}

					if (strpos($image_name, 'img_') === 0 && $image_filename)
					{
						$image_name = substr($image_name, 4);
						if (in_array($image_name, $imageset_definitions))
						{
							$sql_ary[] = array(
								'image_name'		=> (string) $image_name,
								'image_filename'	=> (string) $image_filename,
								'image_height'		=> (int) $image_height,
								'image_width'		=> (int) $image_width,
								'imageset_id'		=> (int) $style_id,
								'image_lang'		=> '',
							);
						}
					}
				}

				$sql = 'SELECT lang_dir
					FROM ' . LANG_TABLE;
				$result = $db->sql_query($sql);

				while ($row = $db->sql_fetchrow($result))
				{
					if (@file_exists("{$phpbb_root_path}styles/{$imageset_row['imageset_path']}/imageset/{$row['lang_dir']}/imageset.cfg"))
					{
						$cfg_data_imageset_data = parse_cfg_file("{$phpbb_root_path}styles/{$imageset_row['imageset_path']}/imageset/{$row['lang_dir']}/imageset.cfg");
						foreach ($cfg_data_imageset_data as $image_name => $value)
						{
							if (strpos($value, '*') !== false)
							{
								if (substr($value, -1, 1) === '*')
								{
									list($image_filename, $image_height) = explode('*', $value);
									$image_width = 0;
								}
								else
								{
									list($image_filename, $image_height, $image_width) = explode('*', $value);
								}
							}
							else
							{
								$image_filename = $value;
								$image_height = $image_width = 0;
							}

							if (strpos($image_name, 'img_') === 0 && $image_filename)
							{
								$image_name = substr($image_name, 4);
								if (in_array($image_name, $imageset_definitions))
								{
									$sql_ary[] = array(
										'image_name'		=> (string) $image_name,
										'image_filename'	=> (string) $image_filename,
										'image_height'		=> (int) $image_height,
										'image_width'		=> (int) $image_width,
										'imageset_id'		=> (int) $style_id,
										'image_lang'		=> (string) $row['lang_dir'],
									);
								}
							}
						}
					}
				}
				$db->sql_freeresult($result);

				$db->sql_multi_insert(STYLES_IMAGESET_DATA_TABLE, $sql_ary);

				$db->sql_transaction('commit');

				$cache->destroy('sql', STYLES_IMAGESET_DATA_TABLE);
				$cache->destroy('imageset_site_logo_md5');
			}
		}
		
		add_log('admin', 'LOG_STYLE_REFRESHED');
	}]]></action>
			</edit>
			<edit>
				<find><![CDATA[		$sql = "SELECT *
			FROM $sql_from
			ORDER BY $sql_sort ASC";
		$result = $db->sql_query($sql);

		$installed = array();]]></find>
				<action type="after-add"><![CDATA[		if($mode == 'style')
		{
			$actions = array_merge((array)'full_refresh', $actions);
		}]]></action>
			</edit>
			<edit>
				<find><![CDATA[	function clear_template_cache($template_row, $file_ary = false)]]></find>
				<action type="replace-with"><![CDATA[	function clear_template_cache($template_row, $file_ary = false, $add_log = true)]]></action>
			</edit>
			<edit>
				<find><![CDATA[		add_log('admin', 'LOG_TEMPLATE_CACHE_CLEARED', $template_row['template_name'], $log_file_list);]]></find>
				<action type="replace-with"><![CDATA[		if ($add_log)
		{
			add_log('admin', 'LOG_TEMPLATE_CACHE_CLEARED', $template_row['template_name'], $log_file_list);
		}]]></action>
			</edit>
		</open>
		<open src="includes/acp/info/acp_styles.php">
			<edit>
				<find><![CDATA[				'style'		=> array('title' => 'ACP_STYLES', 'auth' => 'acl_a_styles', 'cat' => array('ACP_STYLE_MANAGEMENT')),]]></find>
				<action type="before-add"><![CDATA[				'full_refresh' => array('title' => 'ACP_STYLES_REFRESH', 'auth' => 'acl_a_styles', 'cat' => array('ACP_STYLE_MANAGEMENT')),]]></action>
			</edit>
		</open>
		<open src="language/en/common.php">
			<edit>
				<find><![CDATA[	'FTP_USERNAME_EXPLAIN'		=> 'Username used to connect to your server.',]]></find>
				<action type="after-add"><![CDATA[	'FULL_REFRESH'				=> 'Full refresh styles',]]></action>
			</edit>
		</open>
		<open src="language/en/acp/common.php">
			<edit>
				<find><![CDATA[	'ACP_STYLES'				=> 'Styles',]]></find>
				<action type="after-add"><![CDATA[	'ACP_STYLES_REFRESH'			=> 'Complete refresh',]]></action>
			</edit>
			<edit>
				<find><![CDATA[	'LOG_STYLE_EXPORT'			=> '<strong>Exported style</strong><br />Â» %s',]]></find>
				<action type="after-add"><![CDATA[	'LOG_STYLE_REFRESHED'		=> '<strong>Completly refreshed all active styles</strong>',
	'LOG_STYLE_REFRESH'			=> '<strong>Completly refreshed style</strong><br />Â» %s',]]></action>
			</edit>
		</open>
		<open src="language/en/acp/styles.php">
			<edit>
				<find><![CDATA[	'FONT_SIZE'				=> 'Font size',]]></find>
				<action type="after-add"><![CDATA[	'FULL_REFRESH'			=> 'Full refresh',
	'FULL_REFRESH_COMPLETED' => 'Templates, themes and imagesets were refreshed!',]]></action>
			</edit>
		</open>
		<open src="styles/prosilver/template/overall_footer.html">
			<edit>
				<find><![CDATA[<!-- IF U_ACP --><br /><strong><a href="{U_ACP}">{L_ACP}</a></strong><!-- ENDIF -->]]></find>
				<action type="replace-with"><![CDATA[<!-- IF U_ACP --><br /><strong><a href="{U_ACP}">{L_ACP}</a></strong><!-- ENDIF --><!-- IF U_FULL_REFRESH --> | <strong><a href="{U_FULL_REFRESH}">{L_FULL_REFRESH}</a></strong><!-- ENDIF -->]]></action>
			</edit>
		</open>
		<open src="styles/subsilver2/template/overall_footer.html">
			<edit>
				<find><![CDATA[<!-- IF U_ACP --><span class="gensmall">[ <a href="{U_ACP}">{L_ACP}</a> ]</span><br /><br /><!-- ENDIF -->]]></find>
				<action type="replace-with"><![CDATA[<!-- IF U_ACP --><span class="gensmall">[ <a href="{U_ACP}">{L_ACP}</a> ]</span><!-- ENDIF --> <!-- IF U_FULL_REFRESH --><span class="gensmall">[ <a href="{U_FULL_REFRESH}">{L_FULL_REFRESH}</a> ]</span><!-- ENDIF --><br /><br />]]></action>
			</edit>
		</open>
		<php-installer><![CDATA[install_fsr.php]]></php-installer>
	</action-group>
</mod>
